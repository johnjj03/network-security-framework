import json
import os
import subprocess
from collections import Counter
import sys

def run_suricata(filename):
    command = 'suricata -l logs -k none -r ' + filename
    subprocess.run(command, shell=True, check=True)

def read_json_lines(file_path):
    with open(file_path, 'r') as file:
        return [json.loads(line) for line in file]

def group_and_sort(data, key=None):
    if key:
        counter = Counter(item[key] for item in data)
    else:
        counter = Counter(data)
    return sorted(counter.items(), key=lambda x: x[1], reverse=True)

def delete_eve_json():
    results_path = 'results.json'
    eve_path = os.path.join('logs', 'eve.json')
    
    if os.path.exists(results_path):
        if os.path.exists(eve_path):
            os.remove(eve_path)
            print(f"Deleted {eve_path}")
        else:
            print(f"{eve_path} does not exist")
    else:
        print(f"{results_path} does not exist")


def analyze_malware(filename):
    # Run Suricata command
    run_suricata(filename)

    # Read and process the eve.json file
    file_path = os.path.join('logs', 'eve.json')
    data = read_json_lines(file_path)

    tls_sni_data = [item['tls'] for item in data if item['event_type'] == 'tls' and 'sni' in item['tls']]
    tls_version_data = [item['tls'] for item in data if item['event_type'] == 'tls' and 'version' in item['tls']]
    http_hostname_data = [item['http'] for item in data if item['event_type'] == 'http' and 'hostname' in item['http']]
    dns_query_data = [item['dns'] for item in data if item['event_type'] == 'dns' and 'rrname' in item['dns']]
    file_info_data = [item['fileinfo'] for item in data if item['event_type'] == 'fileinfo' and 'filename' in item['fileinfo']]
    file_magic_data = [item['fileinfo'] for item in data if item['event_type'] == 'fileinfo' and 'magic' in item['fileinfo']]
    alert_data = [item['alert'] for item in data if item['event_type'] == 'alert' and 'signature' in item['alert']]

    results = {
        "Alerts": group_and_sort(alert_data, 'signature'),
        "Event_Types": group_and_sort([item['event_type'] for item in data]),
        "TLS_SNIs": group_and_sort(tls_sni_data, 'sni'),
        "TLS_Versions": group_and_sort(tls_version_data, 'version'),
        "HTTP_Hostnames": group_and_sort(http_hostname_data, 'hostname'),
        "DNS_Queries": group_and_sort(dns_query_data, 'rrname'),
        "Filenames": group_and_sort(file_info_data, 'filename'),
        "File_Magic": group_and_sort(file_magic_data, 'magic'),
    }

    results_filename = os.path.join('static', 'results.json')
    with open(results_filename, 'w') as f:
        json.dump(results, f, indent=4)
    
    delete_eve_json()

    return results_filename

if __name__ == "__main__":
    filename = sys.argv[1]
    results = analyze_malware(filename)
    print(results)